"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFixtureListFromExports = getFixtureListFromExports;
exports.getFixtureListFromWrappers = getFixtureListFromWrappers;

var _isMultiFixture = require("./isMultiFixture");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function getFixtureListFromWrappers(wrappers) {
  return Object.keys(wrappers).reduce(function (acc, fixturePath) {
    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, fixturePath, getItemFromWrapper(wrappers[fixturePath])));
  }, {});
}

function getFixtureListFromExports(exports) {
  return Object.keys(exports).reduce(function (acc, fixturePath) {
    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, fixturePath, getItemFromExport(exports[fixturePath])));
  }, {});
}

function getItemFromWrapper(wrapper) {
  return getItemFromExport(wrapper.module.default);
}

function getItemFromExport(fixtureExport) {
  return (0, _isMultiFixture.isMultiFixture)(fixtureExport) ? {
    type: 'multi',
    fixtureNames: Object.keys(fixtureExport)
  } : {
    type: 'single'
  };
}